//
//  LWAlearView.swift
//  HaoYuClient
//
//  Created by 刘文强 on 2019/1/16.
//  Copyright © 2019年 LWQ. All rights reserved.
//

import UIKit

class LWAlertView: NSObject {
    
    
    
    
    //MARK: - ------------------------ JKAlert ------------------------
    
    /// JKAlert
    ///
    /// - Parameter text: 提示
    static func show(text:String){
        JKAlert.alertText(text, duration: 0.5)
    }
    static func showSuccess(text:String){
        JKAlert.alertTickText(text, duration: 0.5)
    }
    
    
    
    //MARK: - ------------------------ 自定义 ------------------------
    
    let window = UIApplication.shared.keyWindow
    let lable = UILabelPadding(withInsets: 5, 5, 0, 0)
    
//    func show(alear:String) {
//        
//        let paraph = NSMutableParagraphStyle()
//        paraph.lineSpacing = 5
//        //样式属性集合
//        let attributes = [kCTFontAttributeName:UIFont.systemFont(ofSize: 15),
//                          kCTParagraphStyleAttributeName:paraph]
//        lable.attributedText = NSAttributedString(string: alear, attributes: attributes as [NSAttributedStringKey : Any])
//        
//        lable.textAlignment = .center
//        
//        UIView.animate(withDuration: 0.25, animations: {
//            self.lable.alpha = 1
//        })
//        DispatchQueue.main.asyncAfter(deadline: .now() + 1) {
//           self.dismiss()
//        }
//    }
//    
//    func dismiss(){
//        UIView.animate(withDuration: 0.25, animations: {
//            self.lable.alpha = 0
//            self.lable.removeFromSuperview()
//        })
//    }
    
    override init() {
        super.init()
        lable.backgroundColor = UIColor.darkGray
        lable.textColor = UIColor.white
        lable.font = LWSystem(ADJUSET(myfloat: 13))
        lable.numberOfLines = 2
        lable.setBoundCorners(radius: 6, boundWidth: 0)
    
        window?.addSubview(lable)
        lable.snp.makeConstraints { (make) in
            make.centerX.equalTo((window?.snp.centerX)!)
            make.centerY.equalTo((window?.snp.centerY)!)
            make.left.greaterThanOrEqualTo((window?.snp.left)!).offset(50)
            make.right.greaterThanOrEqualTo((window?.snp.right)!).offset(-50)
            
        }
    }

    
}

class UILabelPadding: UILabel {
    
    var topInset: CGFloat
    var bottomInset: CGFloat
    var leftInset: CGFloat
    var rightInset: CGFloat
    
    required init(withInsets top: CGFloat, _ bottom: CGFloat,_ left: CGFloat,_ right: CGFloat) {
        self.topInset = top
        self.bottomInset = bottom
        self.leftInset = left
        self.rightInset = right
        super.init(frame: CGRect.zero)
    }
    
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    override func drawText(in rect: CGRect) {
        let insets = UIEdgeInsets(top: topInset, left: leftInset, bottom: bottomInset, right: rightInset)
        super.drawText(in: CGRect().inset(by: insets))
        
    }
    
    override var intrinsicContentSize: CGSize {
        get {
            var contentSize = super.intrinsicContentSize
            contentSize.height += topInset + bottomInset
            contentSize.width += leftInset + rightInset
            return contentSize
        }
    }
    
   
    
}
